"use strict";(self.webpackChunkobject_oriented_programming=self.webpackChunkobject_oriented_programming||[]).push([[8932],{662:(e,r,n)=>{n.d(r,{A:()=>s});n(6672);var t=n(3526);const a={tabItem:"tabItem_yLdf"};var i=n(3420);function s({children:e,hidden:r,className:n}){return(0,i.jsx)("div",{role:"tabpanel",className:(0,t.A)(a.tabItem,n),hidden:r,children:e})}},2046:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>c,default:()=>g,frontMatter:()=>l,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"block-01_oop-fundamentals/POJO_UML_basic","title":"POJO y UML B\xe1sico","description":"\xbfQu\xe9 es un POJO?","source":"@site/docs/block-01_oop-fundamentals/03_POJO_UML_basic.md","sourceDirName":"block-01_oop-fundamentals","slug":"/block-01_oop-fundamentals/POJO_UML_basic","permalink":"/Object_Oriented_Programming_Intersemester/docs/block-01_oop-fundamentals/POJO_UML_basic","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/block-01_oop-fundamentals/03_POJO_UML_basic.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Introducci\xf3n a la Programaci\xf3n Orientada a Objetos","permalink":"/Object_Oriented_Programming_Intersemester/docs/block-01_oop-fundamentals/OOP-introduction"}}');var a=n(3420),i=n(5404),s=n(2206),o=n(662);const l={sidebar_position:3},c="POJO y UML B\xe1sico",d={},u=[{value:"\xbfQu\xe9 es un POJO?",id:"qu\xe9-es-un-pojo",level:2},{value:"C\xf3digo en Java",id:"c\xf3digo-en-java",level:3},{value:"\xbfQu\xe9 es UML?",id:"qu\xe9-es-uml",level:2},{value:"\xbfQu\xe9 es PlantUML?",id:"qu\xe9-es-plantuml",level:3},{value:"Analog\xeda B\xe1sica",id:"analog\xeda-b\xe1sica",level:2},{value:"Actividad",id:"actividad",level:2},{value:"Reto de clase",id:"reto-de-clase",level:2},{value:"Reflexi\xf3n final",id:"reflexi\xf3n-final",level:2},{value:"Aplicaci\xf3n pr\xe1ctica",id:"aplicaci\xf3n-pr\xe1ctica",level:2},{value:"Recursos y Bibliograf\xeda",id:"recursos-y-bibliograf\xeda",level:2}];function h(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"pojo-y-uml-b\xe1sico",children:"POJO y UML B\xe1sico"})}),"\n",(0,a.jsx)(r.h2,{id:"qu\xe9-es-un-pojo",children:"\xbfQu\xe9 es un POJO?"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"POJO (Plain Old Java Object)"})," es un objeto Java ",(0,a.jsx)(r.strong,{children:"sencillo y aut\xf3nomo"})," que no depende de ninguna tecnolog\xeda, framework o API externa (como Spring, Hibernate, etc.). Es la forma m\xe1s limpia y pura de representar una ",(0,a.jsx)(r.strong,{children:"entidad del dominio"}),"."]}),"\n",(0,a.jsx)(r.p,{children:"Caracter\xedsticas de un POJO:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"Tiene atributos privados."}),"\n",(0,a.jsx)(r.li,{children:"Posee constructores, setters y getters."}),"\n",(0,a.jsxs)(r.li,{children:["Puede implementar ",(0,a.jsx)(r.code,{children:"toString()"}),", ",(0,a.jsx)(r.code,{children:"equals()"})," y ",(0,a.jsx)(r.code,{children:"hashCode()"}),"."]}),"\n",(0,a.jsx)(r.li,{children:"No extiende de clases espec\xedficas ni implementa interfaces no necesarias."}),"\n"]}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Ejemplo real:"})," Representar un libro (",(0,a.jsx)(r.code,{children:"Book"}),") solo con su t\xedtulo, autor, a\xf1o y c\xf3digo ISBN."]}),"\n",(0,a.jsx)(r.h3,{id:"c\xf3digo-en-java",children:"C\xf3digo en Java"}),"\n","\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(o.A,{value:"diagrama",label:"Diagrama de Clases",children:(0,a.jsx)(r.mermaid,{value:"classDiagram\r\n    class Book {\r\n        - String title\r\n        - String author\r\n        - int year\r\n        - String isbn\r\n        + Book(String, String, int, String)\r\n        + String getTitle()\r\n        + void setTitle(String)\r\n        + String getAuthor()\r\n        + void setAuthor(String)\r\n        + int getYear()\r\n        + void setYear(int)\r\n        + String getIsbn()\r\n        + void setIsbn(String)\r\n        + String toString()\r\n    }\r\n\r\n    class BookTest  {\r\n        + void testBookToString()\r\n        + void testSetAndGetTitle()\r\n    }\r\n\r\n    BookTest  --\x3e Book : tests"})}),(0,a.jsx)(o.A,{value:"java1",label:"Clase POJO",children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",metastring:'title="Book.java" showLineNumbers',children:'/**\r\n * Represents a book entity in a library system.\r\n */\r\npublic class Book {\r\n    private String title;\r\n    private String author;\r\n    private int year;\r\n    private String isbn;\r\n\r\n    /**\r\n     * Constructs a new Book with basic information.\r\n     * @param title Title of the book.\r\n     * @param author Author of the book.\r\n     * @param year Year of publication.\r\n     * @param isbn ISBN code of the book.\r\n     */\r\n    public Book(String title, String author, int year, String isbn) {\r\n        this.title = title;\r\n        this.author = author;\r\n        this.year = year;\r\n        this.isbn = isbn;\r\n    }\r\n\r\n    public String getTitle() { return title; }\r\n    public void setTitle(String title) { this.title = title; }\r\n\r\n    public String getAuthor() { return author; }\r\n    public void setAuthor(String author) { this.author = author; }\r\n\r\n    public int getYear() { return year; }\r\n    public void setYear(int year) { this.year = year; }\r\n\r\n    public String getIsbn() { return isbn; }\r\n    public void setIsbn(String isbn) { this.isbn = isbn; }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return title + " by " + author + " (" + year + ")";\r\n    }\r\n}\n'})})}),(0,a.jsx)(o.A,{value:"java2",label:"Test Unitarios",children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",metastring:'title="BookTest.java" showLineNumbers',children:'import org.junit.jupiter.api.Test;\r\nimport static org.junit.jupiter.api.Assertions.*;\r\n\r\npublic class BookTest {\r\n\r\n    @Test\r\n    void testBookToString() {\r\n        Book book = new Book("Clean Code", "Robert C. Martin", 2008, "9780132350884");\r\n        assertEquals("Clean Code by Robert C. Martin (2008)", book.toString());\r\n    }\r\n\r\n    @Test\r\n    void testSetAndGetTitle() {\r\n        Book book = new Book("Title", "Author", 2020, "123");\r\n        book.setTitle("New Title");\r\n        assertEquals("New Title", book.getTitle());\r\n    }\r\n}\n'})})})]}),"\n",(0,a.jsx)(r.h2,{id:"qu\xe9-es-uml",children:"\xbfQu\xe9 es UML?"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"UML (Unified Modeling Language)"})," es un lenguaje gr\xe1fico que permite ",(0,a.jsx)(r.strong,{children:"modelar sistemas orientados a objetos"}),". Tambi\xe9n podr\xedamos definirlo como un ",(0,a.jsx)(r.strong,{children:"lenguaje visual estandarizado"})," para representar la estructura, comportamiento e interacciones de un sistema orientado a objetos."]}),"\n",(0,a.jsx)(r.p,{children:"En la Programaci\xf3n Orientada a Objetos tenemos los siguientes tipos de diagramas UML m\xe1s comunes:"}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Tipo de diagrama"}),(0,a.jsx)(r.th,{children:"Prop\xf3sito"})]})}),(0,a.jsxs)(r.tbody,{children:[(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:(0,a.jsx)(r.strong,{children:"Diagrama de clases"})}),(0,a.jsx)(r.td,{children:"Representar entidades del sistema (clases, atributos, m\xe9todos, relaciones)"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:(0,a.jsx)(r.strong,{children:"Diagrama de casos de uso"})}),(0,a.jsx)(r.td,{children:"Representar interacciones entre actores y el sistema"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:(0,a.jsx)(r.strong,{children:"Diagrama de secuencia"})}),(0,a.jsx)(r.td,{children:"Modelar la interacci\xf3n temporal entre objetos"})]}),(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:(0,a.jsx)(r.strong,{children:"Diagrama de actividades"})}),(0,a.jsx)(r.td,{children:"Mostrar flujos de trabajo o procesos"})]})]})]}),"\n",(0,a.jsxs)(r.p,{children:["Por ejemplo, en el ",(0,a.jsx)(r.strong,{children:"diagrama de clases"})," UML se representan:"]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"Clases"}),"\n",(0,a.jsx)(r.li,{children:"Atributos"}),"\n",(0,a.jsx)(r.li,{children:"M\xe9todos"}),"\n",(0,a.jsx)(r.li,{children:"Relaciones (asociaci\xf3n, herencia, composici\xf3n, etc.)"}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"S\xedmbolos b\xe1sicos:"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"+"})," p\xfablico"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"-"})," privado"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"#"})," protegido"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"~"})," est\xe1tico"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"*"})," multiplicidad (n\xfamero de instancias)"]}),"\n"]}),"\n",(0,a.jsx)(r.h3,{id:"qu\xe9-es-plantuml",children:"\xbfQu\xe9 es PlantUML?"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"PlantUML"})," es una herramienta que permite crear ",(0,a.jsx)(r.strong,{children:"diagramas UML mediante c\xf3digo textual"}),'. En lugar de arrastrar y soltar elementos gr\xe1ficos, el usuario escribe una especie de "lenguaje de marcado" para generar los diagramas autom\xe1ticamente.']}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Ventajas"}),":"]}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"Ligero y r\xe1pido."}),"\n",(0,a.jsx)(r.li,{children:"Versionable en Git."}),"\n",(0,a.jsx)(r.li,{children:"Compatible con Markdown, Docusaurus y VSCode."}),"\n",(0,a.jsx)(r.li,{children:"Ideal para generar documentaci\xf3n autom\xe1tica de c\xf3digo."}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"Un diagrama en PlantUML se v\xe9 de la siguiente manera:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-puml",children:"@startuml\r\nclass Book {\r\n    - title: String\r\n    - author: String\r\n    + getTitle(): String\r\n    + setTitle(String): void\r\n}\r\n@enduml\n"})}),"\n",(0,a.jsxs)(r.p,{children:["Este c\xf3digo genera una imagen de un diagrama de clase con la clase ",(0,a.jsx)(r.code,{children:"Book"}),", sus atributos y m\xe9todos."]}),"\n",(0,a.jsx)(r.p,{children:"Para trabajar con PlantUML en VSCode debes:"}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsx)(r.li,{children:"Tener conexi\xf3n a internet para renderizado online, o instalar Graphviz para render local."}),"\n",(0,a.jsx)(r.li,{children:'Instalar la extensi\xf3n "PlantUML" con mayor n\xfamero de usuarios.'}),"\n",(0,a.jsxs)(r.li,{children:["Crear un archivo ",(0,a.jsx)(r.code,{children:".puml"})," o ",(0,a.jsx)(r.code,{children:".plantuml"})," con el c\xf3digo del diagrama."]}),"\n",(0,a.jsxs)(r.li,{children:["Presionar ",(0,a.jsx)(r.strong,{children:"Alt + D"}),' o hacer click derecho y luego seleccionar "Preview Current Diagram".']}),"\n",(0,a.jsx)(r.li,{children:'Puedes exportar el diagrama a formato PNG o SVG usando el comando "Export Current Diagram"'}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"analog\xeda-b\xe1sica",children:"Analog\xeda B\xe1sica"}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.p,{children:"POJO como un envase limpio y etiquetado"}),"\n",(0,a.jsx)(r.p,{children:"Imagina que un POJO es como una botella transparente con etiqueta:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["Contiene un l\xedquido (datos como ",(0,a.jsx)(r.code,{children:"title"}),", ",(0,a.jsx)(r.code,{children:"author"}),", etc.)."]}),"\n",(0,a.jsx)(r.li,{children:"Tiene tapa (acceso controlado con getters/setters)."}),"\n",(0,a.jsxs)(r.li,{children:["No hace nada m\xe1s que ",(0,a.jsx)(r.strong,{children:"guardar datos de forma ordenada"}),"."]}),"\n",(0,a.jsx)(r.li,{children:"No tiene chips, sensores, ni botones (no depende de frameworks ni librer\xedas externas)."}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"Es una estructura de datos pura, como un frasco que contiene informaci\xf3n pero no interact\xfaa con el mundo por s\xed solo."}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.p,{children:"UML como el plano de una casa"}),"\n",(0,a.jsx)(r.p,{children:"Antes de construir una casa, necesitas un plano arquitect\xf3nico. Este no tiene cemento, ladrillos ni electricidad, pero:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"Dice d\xf3nde estar\xe1 cada habitaci\xf3n (clase)."}),"\n",(0,a.jsx)(r.li,{children:"Qu\xe9 tendr\xe1 dentro (atributos y m\xe9todos)."}),"\n",(0,a.jsx)(r.li,{children:"Qu\xe9 puertas conectan una habitaci\xf3n con otra (relaciones entre clases)."}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"UML no construye el sistema, pero lo visualiza antes de codificarlo."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"actividad",children:"Actividad"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:"Construcci\xf3n manual de una clase User con atributos b\xe1sicos (id, name, email)."}),"\n",(0,a.jsx)(r.li,{children:"Dibujar en grupo el diagrama UML en papel (nombre, atributos, m\xe9todos)."}),"\n",(0,a.jsx)(r.li,{children:"Uso de PlantUML o draw.io para digitalizar el diagrama."}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"reto-de-clase",children:"Reto de clase"}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"Sistema de Biblioteca (versi\xf3n POJO):"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["Clase ",(0,a.jsx)(r.code,{children:"Book"}),": t\xedtulo, autor, a\xf1o, ISBN"]}),"\n",(0,a.jsxs)(r.li,{children:["Clase ",(0,a.jsx)(r.code,{children:"User"}),": id, nombre, correo"]}),"\n",(0,a.jsxs)(r.li,{children:["Clase ",(0,a.jsx)(r.code,{children:"Loan"}),": fecha, libro, usuario"]}),"\n"]}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Reto:"})," Modelar y construir los tres POJOs + sus UMLs + documentaci\xf3n."]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"Pistas:"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.code,{children:"Loan"})," debe tener referencias a ",(0,a.jsx)(r.code,{children:"Book"})," y ",(0,a.jsx)(r.code,{children:"User"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:["\n",(0,a.jsx)(r.p,{children:"Uso de composici\xf3n en UML."}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-puml",children:"@startuml\r\nclass Loan {\r\n    - date: LocalDate\r\n    - book: Book\r\n    - user: User\r\n    + getDate(): LocalDate\r\n    + getBook(): Book\r\n    + getUser(): User\r\n}\r\nLoan --\x3e Book\r\nLoan --\x3e User\r\n@enduml\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"Resultado:"})}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(o.A,{value:"diagrma",label:"Diagrama de Clases",children:(0,a.jsx)(r.mermaid,{value:"classDiagram\r\n    class Book {\r\n        - String title\r\n        - String author\r\n        - int year\r\n        - String isbn\r\n        + String getTitle()\r\n        + void setTitle(String)\r\n        + String getAuthor()\r\n        + void setAuthor(String)\r\n        + int getYear()\r\n        + void setYear(int)\r\n        + String getIsbn()\r\n        + void setIsbn(String)\r\n        + String toString()\r\n    }\r\n\r\n    class Loan {\r\n        - LocalDate date\r\n        - Book book\r\n        - User user\r\n        + LocalDate getDate()\r\n        + void setDate(LocalDate)\r\n        + Book getBook()\r\n        + void setBook(Book)\r\n        + User getUser()\r\n        + void setUser(User)\r\n    }\r\n\r\n    class User {\r\n        - String id\r\n        - String name\r\n        - String email\r\n        + String getId()\r\n        + void setId(String)\r\n        + String getName()\r\n        + void setName(String)\r\n        + String getUser()\r\n        + void setUser(String)\r\n    }\r\n\r\n    Loan --\x3e Book\r\n    Loan --\x3e User"})}),(0,a.jsx)(o.A,{value:"plantUML",label:"C\xf3digo PlantUML",children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-puml",metastring:'title="basicUML.puml" showLineNumbers',children:"@startuml basicUML\r\nclass Book {\r\n    - title: String\r\n    - author: String\r\n    - year: int\r\n    - isbn: String\r\n    + getTitle(): String\r\n    + setTitle(String): void\r\n    + getAuthor(): String\r\n    + setAuthor(String): void\r\n    + getYear(): int\r\n    + setYear(int): void\r\n    + getIsbn(): String\r\n    + setIsbn(String): void\r\n    + toString(): String\r\n}\r\n\r\nclass Loan {\r\n    - date: LocalDate\r\n    - book: Book\r\n    - user: User\r\n    + getDate(): LocalDate\r\n    + setDate(LocalDate): void\r\n    + getBook(): Book\r\n    + setBook(Book): void\r\n    + getUser(): User\r\n    + setUser(User): void\r\n}\r\n\r\nclass User {\r\n    - id: String\r\n    - name: String\r\n    - email: String\r\n    + getId(): String\r\n    + setId(String): void\r\n    + getName(): String\r\n    + setName(String): void\r\n    + getUser(): String\r\n    + setUser(String): void\r\n}\r\n\r\nLoan --\x3e Book\r\nLoan --\x3e User\r\n@enduml\n"})})}),(0,a.jsxs)(o.A,{value:"java",label:"POJOs - C\xf3digo Java",children:[(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",metastring:'title="Book.java" showLineNumbers',children:'package domain;\r\n\r\n/**\r\n * Represents a book in the library system.\r\n * Each book has a title, an author, a publication year, and an ISBN code.\r\n * Provides methods to access and modify book details.\r\n */\r\npublic class Book {\r\n    private String title;\r\n    private String author;\r\n    private int year;\r\n    private String isbn;\r\n\r\n    /**\r\n     * Constructs a new Book with the specified details.\r\n     *\r\n     * @param title the title of the book\r\n     * @param author the author of the book\r\n     * @param year the year of publication\r\n     * @param isbn the ISBN code of the book\r\n     */\r\n    public Book(String title, String author, int year, String isbn) {\r\n        this.title = title;\r\n        this.author = author;\r\n        this.year = year;\r\n        this.isbn = isbn;\r\n    }\r\n\r\n    /**\r\n     * Gets the title of the book.\r\n     * @return the book title\r\n     */\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n\r\n    /**\r\n     * Sets the title of the book.\r\n     * @param title the new title\r\n     */\r\n    public void setTitle(String title) {\r\n        this.title = title;\r\n    }\r\n\r\n    /**\r\n     * Gets the author of the book.\r\n     * @return the book author\r\n     */\r\n    public String getAuthor() {\r\n        return author;\r\n    }\r\n\r\n    /**\r\n     * Sets the author of the book.\r\n     * @param author the new author\r\n     */\r\n    public void setAuthor(String author) {\r\n        this.author = author;\r\n    }\r\n\r\n    /**\r\n     * Gets the publication year.\r\n     * @return the publication year\r\n     */\r\n    public int getYear() {\r\n        return year;\r\n    }\r\n\r\n    /**\r\n     * Sets the publication year.\r\n     * @param year the new year\r\n     */\r\n    public void setYear(int year) {\r\n        this.year = year;\r\n    }\r\n\r\n    /**\r\n     * Gets the ISBN code.\r\n     * @return the ISBN\r\n     */\r\n    public String getIsbn() {\r\n        return isbn;\r\n    }\r\n\r\n    /**\r\n     * Sets the ISBN code.\r\n     * @param isbn the new ISBN\r\n     */\r\n    public void setIsbn(String isbn) {\r\n        this.isbn = isbn;\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of the book.\r\n     * @return formatted book details\r\n     */\r\n    @Override\r\n    public String toString() {\r\n        return title + " by " + author + " (" + year + ") - ISBN: " + isbn;\r\n    }\r\n}\r\n\n'})}),(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",metastring:'title="User.java" showLineNumbers',children:"package domain;\r\n\r\n/**\r\n * Represents a user who borrows books.\r\n * Each user has an ID, a name, and an email address.\r\n */\r\npublic class User {\r\n    private String id;\r\n    private String name;\r\n    private String email;\r\n\r\n    /**\r\n     * Constructs a new User with the given data.\r\n     *\r\n     * @param id the unique identifier for the user\r\n     * @param name the name of the user\r\n     * @param email the email address of the user\r\n     */\r\n    public User(String id, String name, String email) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.email = email;\r\n    }\r\n\r\n    /**\r\n     * Gets the user ID.\r\n     * @return the ID\r\n     */\r\n    public String getId() {\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Sets the user ID.\r\n     * @param id the new ID\r\n     */\r\n    public void setId(String id) {\r\n        this.id = id;\r\n    }\r\n\r\n    /**\r\n     * Gets the user's name.\r\n     * @return the name\r\n     */\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    /**\r\n     * Sets the user's name.\r\n     * @param name the new name\r\n     */\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    /**\r\n     * Gets the user's email address.\r\n     * @return the email\r\n     */\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    /**\r\n     * Sets the user's email address.\r\n     * @param email the new email\r\n     */\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n}\n"})}),(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-java",metastring:'title="Loan.java" showLineNumbers',children:"package domain;\r\n\r\nimport java.time.LocalDate;\r\n\r\n/**\r\n * Represents a loan (borrowing transaction) in the system.\r\n * Associates a book and a user with the date of the loan.\r\n */\r\npublic class Loan {\r\n    private LocalDate date;\r\n    private Book book;\r\n    private User user;\r\n\r\n    /**\r\n     * Constructs a new Loan with the specified date, book, and user.\r\n     *\r\n     * @param date the date of the loan\r\n     * @param book the borrowed book\r\n     * @param user the user who borrows the book\r\n     */\r\n    public Loan(LocalDate date, Book book, User user) {\r\n        this.date = date;\r\n        this.book = book;\r\n        this.user = user;\r\n    }\r\n\r\n    /**\r\n     * Gets the loan date.\r\n     * @return the date\r\n     */\r\n    public LocalDate getDate() {\r\n        return date;\r\n    }\r\n\r\n    /**\r\n     * Sets the loan date.\r\n     * @param date the new date\r\n     */\r\n    public void setDate(LocalDate date) {\r\n        this.date = date;\r\n    }\r\n\r\n    /**\r\n     * Gets the borrowed book.\r\n     * @return the book\r\n     */\r\n    public Book getBook() {\r\n        return book;\r\n    }\r\n\r\n    /**\r\n     * Sets the borrowed book.\r\n     * @param book the new book\r\n     */\r\n    public void setBook(Book book) {\r\n        this.book = book;\r\n    }\r\n\r\n    /**\r\n     * Gets the user who borrowed the book.\r\n     * @return the user\r\n     */\r\n    public User getUser() {\r\n        return user;\r\n    }\r\n\r\n    /**\r\n     * Sets the user who borrowed the book.\r\n     * @param user the new user\r\n     */\r\n    public void setUser(User user) {\r\n        this.user = user;\r\n    }\r\n}\n"})})]})]}),"\n",(0,a.jsx)(r.h2,{id:"reflexi\xf3n-final",children:"Reflexi\xf3n final"}),"\n",(0,a.jsx)(r.p,{children:"Principios SOLID aplicados:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"S \u2013 Single Responsibility:"})," cada POJO representa solo una entidad (sin l\xf3gica extra)."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"O \u2013 Open/Closed:"})," se pueden extender funcionalidades sin modificar la clase base."]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"Patrones aplicados:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Value Object:"})," los POJOs representan datos sin l\xf3gica de negocio compleja."]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Composition:"})," en Loan, se incluyen objetos Book y User."]}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"aplicaci\xf3n-pr\xe1ctica",children:"Aplicaci\xf3n pr\xe1ctica"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["Sistemas universitarios: ",(0,a.jsx)(r.code,{children:"Student"}),", ",(0,a.jsx)(r.code,{children:"Course"}),", ",(0,a.jsx)(r.code,{children:"Enrollment"})]}),"\n",(0,a.jsxs)(r.li,{children:["E-commerce: ",(0,a.jsx)(r.code,{children:"Product"}),", ",(0,a.jsx)(r.code,{children:"Customer"}),", ",(0,a.jsx)(r.code,{children:"Order"})]}),"\n",(0,a.jsxs)(r.li,{children:["Videojuegos: ",(0,a.jsx)(r.code,{children:"Character"}),", ",(0,a.jsx)(r.code,{children:"Weapon"}),", ",(0,a.jsx)(r.code,{children:"Inventory"})]}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"recursos-y-bibliograf\xeda",children:"Recursos y Bibliograf\xeda"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:["Oracle. (2024). ",(0,a.jsx)(r.a,{href:"https://docs.oracle.com/javaee/6/tutorial/doc/gjbnr.html",children:"Creating and Using Plain Old Java Objects (POJO)"})]}),"\n",(0,a.jsx)(r.li,{children:"Ambler, S. W. (2004). The Object Primer: Agile Model-Driven Development with UML 2.0. Cambridge University Press."}),"\n",(0,a.jsxs)(r.li,{children:["Sitio oficial de ",(0,a.jsx)(r.a,{href:"https://plantuml.com/",children:"PlantUML"})]}),"\n",(0,a.jsxs)(r.li,{children:["Plugin para VSCode: ",(0,a.jsx)(r.a,{href:"https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml",children:"PlantUML extension - Visual Studio Marketplace"})]}),"\n",(0,a.jsxs)(r.li,{children:["Documentaci\xf3n de Java para UML: ",(0,a.jsx)(r.a,{href:"https://docs.oracle.com/javase/tutorial/extra/",children:"Oracle Java UML Guide"})]}),"\n"]})]})}function g(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},2206:(e,r,n)=>{n.d(r,{A:()=>k});var t=n(6672),a=n(3526),i=n(7859),s=n(5291),o=n(1293),l=n(1476),c=n(4621),d=n(8690);function u(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:r,children:n}=e;return(0,t.useMemo)((()=>{const e=r??function(e){return u(e).map((({props:{value:e,label:r,attributes:n,default:t}})=>({value:e,label:r,attributes:n,default:t})))}(n);return function(e){const r=(0,c.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,n])}function g({value:e,tabValues:r}){return r.some((r=>r.value===e))}function m({queryString:e=!1,groupId:r}){const n=(0,s.W6)(),a=function({queryString:e=!1,groupId:r}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:e,groupId:r});return[(0,l.aZ)(a),(0,t.useCallback)((e=>{if(!a)return;const r=new URLSearchParams(n.location.search);r.set(a,e),n.replace({...n.location,search:r.toString()})}),[a,n])]}function p(e){const{defaultValue:r,queryString:n=!1,groupId:a}=e,i=h(e),[s,l]=(0,t.useState)((()=>function({defaultValue:e,tabValues:r}){if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!g({value:e,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:i}))),[c,u]=m({queryString:n,groupId:a}),[p,b]=function({groupId:e}){const r=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,a]=(0,d.Dv)(r);return[n,(0,t.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:a}),j=(()=>{const e=c??p;return g({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{j&&l(j)}),[j]);return{selectedValue:s,selectValue:(0,t.useCallback)((e=>{if(!g({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),b(e)}),[u,b,i]),tabValues:i}}var b=n(7167);const j={tabList:"tabList_iWLe",tabItem:"tabItem_YMMG"};var x=n(3420);function v({className:e,block:r,selectedValue:n,selectValue:t,tabValues:s}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),c=e=>{const r=e.currentTarget,a=o.indexOf(r),i=s[a].value;i!==n&&(l(r),t(i))},d=e=>{let r=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=o.indexOf(e.currentTarget)+1;r=o[n]??o[0];break}case"ArrowLeft":{const n=o.indexOf(e.currentTarget)-1;r=o[n]??o[o.length-1];break}}r?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":r},e),children:s.map((({value:e,label:r,attributes:t})=>(0,x.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...t,className:(0,a.A)("tabs__item",j.tabItem,t?.className,{"tabs__item--active":n===e}),children:r??e},e)))})}function S({lazy:e,children:r,selectedValue:n}){const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(e){const e=i.find((e=>e.props.value===n));return e?(0,t.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:i.map(((e,r)=>(0,t.cloneElement)(e,{key:r,hidden:e.props.value!==n})))})}function f(e){const r=p(e);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",j.tabList),children:[(0,x.jsx)(v,{...r,...e}),(0,x.jsx)(S,{...r,...e})]})}function k(e){const r=(0,b.A)();return(0,x.jsx)(f,{...e,children:u(e.children)},String(r))}}}]);