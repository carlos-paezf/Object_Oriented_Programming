"use strict";(self.webpackChunkobject_oriented_programming=self.webpackChunkobject_oriented_programming||[]).push([[3639],{3619:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"block-01_oop-fundamentals/glossary","title":"Glosario Bloque 01: Fundamentos de POO","description":"Secci\xf3n 01: Conceptos B\xe1sicos","source":"@site/docs/block-01_oop-fundamentals/08_glossary.md","sourceDirName":"block-01_oop-fundamentals","slug":"/block-01_oop-fundamentals/glossary","permalink":"/Object_Oriented_Programming_Intersemester/en/docs/block-01_oop-fundamentals/glossary","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/block-01_oop-fundamentals/08_glossary.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Proyecto pr\xe1ctico del bloque 1","permalink":"/Object_Oriented_Programming_Intersemester/en/docs/block-01_oop-fundamentals/final-project-block-01"},"next":{"title":"Bloque 02 - Interfaces, mapeo y patr\xf3n DAO","permalink":"/Object_Oriented_Programming_Intersemester/en/docs/category/bloque-02---interfaces-mapeo-y-patr\xf3n-dao"}}');var r=i(4848),a=i(8453);const o={sidebar_position:8},c="Glosario Bloque 01: Fundamentos de POO",d={},l=[{value:"Secci\xf3n 01: Conceptos B\xe1sicos",id:"secci\xf3n-01-conceptos-b\xe1sicos",level:2},{value:"Programaci\xf3n Orientada a Objetos (POO)",id:"programaci\xf3n-orientada-a-objetos-poo",level:3},{value:"Clase",id:"clase",level:3},{value:"Objeto",id:"objeto",level:3},{value:"Instancia",id:"instancia",level:3},{value:"Atributo",id:"atributo",level:3},{value:"M\xe9todo",id:"m\xe9todo",level:3},{value:"Encapsulamiento",id:"encapsulamiento",level:3},{value:"Modularidad",id:"modularidad",level:3},{value:"Paradigma",id:"paradigma",level:3},{value:"Programaci\xf3n Estructurada",id:"programaci\xf3n-estructurada",level:3},{value:"Entidad (Entity)",id:"entidad-entity",level:3},{value:"Servicio (Service)",id:"servicio-service",level:3},{value:"Prueba Unitaria (Unit Test)",id:"prueba-unitaria-unit-test",level:3},{value:"Abstracci\xf3n",id:"abstracci\xf3n",level:3},{value:"Herencia",id:"herencia",level:3},{value:"Composici\xf3n",id:"composici\xf3n",level:3},{value:"Polimorfismo",id:"polimorfismo",level:3},{value:"Responsabilidad \xdanica (SRP - Single Responsibility Principle)",id:"responsabilidad-\xfanica-srp---single-responsibility-principle",level:3},{value:"Open/Closed Principle (OCP)",id:"openclosed-principle-ocp",level:3},{value:"Secci\xf3n 02: Introducci\xf3n a POO",id:"secci\xf3n-02-introducci\xf3n-a-poo",level:2},{value:"Clase Abstracta",id:"clase-abstracta",level:3},{value:"Paquete (Package)",id:"paquete-package",level:3},{value:"Jerarqu\xeda de Clases",id:"jerarqu\xeda-de-clases",level:3},{value:"Principio de Sustituci\xf3n de Liskov (Liskov Substitution Principle \u2013 LSP)",id:"principio-de-sustituci\xf3n-de-liskov-liskov-substitution-principle--lsp",level:3},{value:"Principio de Segregaci\xf3n de Interfaces (Interface Segregation Principle \u2013 ISP)",id:"principio-de-segregaci\xf3n-de-interfaces-interface-segregation-principle--isp",level:3},{value:"Patr\xf3n Template Method",id:"patr\xf3n-template-method",level:3},{value:"Patr\xf3n Strategy",id:"patr\xf3n-strategy",level:3},{value:"Secci\xf3n 03: POJO y UML B\xe1sico",id:"secci\xf3n-03-pojo-y-uml-b\xe1sico",level:2},{value:"POJO (Plain Old Java Object)",id:"pojo-plain-old-java-object",level:3},{value:"Setter y Getter",id:"setter-y-getter",level:3},{value:"toString()",id:"tostring",level:3},{value:"equals() y hashCode()",id:"equals-y-hashcode",level:3},{value:"UML (Unified Modeling Language)",id:"uml-unified-modeling-language",level:3},{value:"Diagrama de Clases",id:"diagrama-de-clases",level:3},{value:"Agregaci\xf3n (en UML)",id:"agregaci\xf3n-en-uml",level:3},{value:"PlantUML",id:"plantuml",level:3},{value:"Value Object (Patr\xf3n de Dise\xf1o)",id:"value-object-patr\xf3n-de-dise\xf1o",level:3},{value:"LocalDate (Java)",id:"localdate-java",level:3},{value:"Secci\xf3n Bonus: Unit Testing con JUnit para JDK 21+",id:"secci\xf3n-bonus-unit-testing-con-junit-para-jdk-21",level:2},{value:"JUnit 5",id:"junit-5",level:3},{value:"JUnit Jupiter",id:"junit-jupiter",level:3},{value:"JUnit Platform",id:"junit-platform",level:3},{value:"JUnit Vintage",id:"junit-vintage",level:3},{value:"Apache Maven",id:"apache-maven",level:3},{value:"pom.xml",id:"pomxml",level:3},{value:"exec-maven-plugin",id:"exec-maven-plugin",level:3},{value:"Aserci\xf3n",id:"aserci\xf3n",level:3},{value:"@BeforeEach, @AfterEach, @BeforeAll, @AfterAll",id:"beforeeach-aftereach-beforeall-afterall",level:3},{value:"Maven Surefire Plugin",id:"maven-surefire-plugin",level:3},{value:"assertThrows()",id:"assertthrows",level:3},{value:"Secci\xf3n 04: Constructores, Getters y Setters, toString",id:"secci\xf3n-04-constructores-getters-y-setters-tostring",level:2},{value:"Constructor",id:"constructor",level:3},{value:"Constructor Impl\xedcito",id:"constructor-impl\xedcito",level:3},{value:"Constructor Vac\xedo",id:"constructor-vac\xedo",level:3},{value:"Constructor con Par\xe1metros",id:"constructor-con-par\xe1metros",level:3},{value:"Sobrecarga de Constructores (Constructor Overloading)",id:"sobrecarga-de-constructores-constructor-overloading",level:3},{value:"Acceso Controlado",id:"acceso-controlado",level:3},{value:"Formato uniforme en toString()",id:"formato-uniforme-en-tostring",level:3},{value:"Enums, String, StringBuffer y StringBuilder",id:"enums-string-stringbuffer-y-stringbuilder",level:2},{value:"enum (Enumeraci\xf3n)",id:"enum-enumeraci\xf3n",level:3},{value:"ordinal()",id:"ordinal",level:3},{value:"valueOf(String)",id:"valueofstring",level:3},{value:"StringBuffer",id:"stringbuffer",level:3},{value:"StringBuilder",id:"stringbuilder",level:3},{value:"reverse()",id:"reverse",level:3},{value:"capacity()",id:"capacity",level:3},{value:"CharSequence",id:"charsequence",level:3},{value:"Thread-safe",id:"thread-safe",level:3},{value:"String Pool",id:"string-pool",level:3},{value:"Comparaci\xf3n por contenido (equals())",id:"comparaci\xf3n-por-contenido-equals",level:3},{value:"Benchmark",id:"benchmark",level:3}];function t(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"glosario-bloque-01-fundamentos-de-poo",children:"Glosario Bloque 01: Fundamentos de POO"})}),"\n",(0,r.jsx)(n.h2,{id:"secci\xf3n-01-conceptos-b\xe1sicos",children:"Secci\xf3n 01: Conceptos B\xe1sicos"}),"\n",(0,r.jsx)(n.h3,{id:"programaci\xf3n-orientada-a-objetos-poo",children:"Programaci\xf3n Orientada a Objetos (POO)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Paradigma de programaci\xf3n que modela el software como una colecci\xf3n de objetos que interact\xfaan entre s\xed, cada uno con estado (atributos) y comportamiento (m\xe9todos)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," En POO, un ",(0,r.jsx)(n.code,{children:"Player"})," en un videojuego tiene atributos como ",(0,r.jsx)(n.code,{children:"health"})," y m\xe9todos como ",(0,r.jsx)(n.code,{children:"attack()"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"clase",children:"Clase"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Plantilla o molde que define un conjunto de atributos y m\xe9todos comunes a todos los objetos que se creen a partir de ella."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," La clase ",(0,r.jsx)(n.code,{children:"Car"})," define qu\xe9 atributos y comportamientos tendr\xe1n todos los autos, como ",(0,r.jsx)(n.code,{children:"startEngine()"})," o ",(0,r.jsx)(n.code,{children:"model"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"objeto",children:"Objeto"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Instancia concreta de una clase. Es una entidad con valores espec\xedficos para sus atributos y acceso a sus m\xe9todos."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:'myCar = new Car("blue", "Toyota")'})," crea un objeto de la clase ",(0,r.jsx)(n.code,{children:"Car"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"instancia",children:"Instancia"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Representaci\xf3n espec\xedfica de una clase cuando se crea un objeto a partir de ella."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Cada torta hecha con una receta es una instancia diferente de esa receta (clase)."]}),"\n",(0,r.jsx)(n.h3,{id:"atributo",children:"Atributo"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Propiedad o caracter\xedstica de un objeto. Corresponde a una variable definida dentro de una clase."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," En la clase ",(0,r.jsx)(n.code,{children:"Person"}),", el atributo name almacena el nombre del individuo."]}),"\n",(0,r.jsx)(n.h3,{id:"m\xe9todo",children:"M\xe9todo"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Comportamiento o funci\xf3n que puede realizar un objeto, definido dentro de su clase."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," El m\xe9todo ",(0,r.jsx)(n.code,{children:"greet()"})," en la clase ",(0,r.jsx)(n.code,{children:"Person"})," permite al objeto decir su nombre y edad."]}),"\n",(0,r.jsx)(n.h3,{id:"encapsulamiento",children:"Encapsulamiento"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Principio que consiste en ocultar los detalles internos de los objetos y exponer solo lo necesario mediante m\xe9todos p\xfablicos."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," La clase ",(0,r.jsx)(n.code,{children:"Car"})," no permite acceso directo al atributo ",(0,r.jsx)(n.code,{children:"engineOn"}),", sino que lo modifica mediante ",(0,r.jsx)(n.code,{children:"start()"})," y ",(0,r.jsx)(n.code,{children:"stop()"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"modularidad",children:"Modularidad"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Organizaci\xf3n del c\xf3digo en m\xf3dulos o componentes independientes y reutilizables que se comunican entre s\xed."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"CarService"})," gestiona la l\xf3gica de conducci\xf3n sin modificar directamente la clase ",(0,r.jsx)(n.code,{children:"Car"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"paradigma",children:"Paradigma"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Enfoque o estilo de programaci\xf3n. Puede ser estructurado, orientado a objetos, funcional, etc."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," La POO es un paradigma que modela entidades reales como clases y objetos."]}),"\n",(0,r.jsx)(n.h3,{id:"programaci\xf3n-estructurada",children:"Programaci\xf3n Estructurada"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Paradigma de programaci\xf3n centrado en funciones y secuencia de instrucciones, sin clases ni objetos."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Un programa en C que calcula promedios mediante funciones ser\xeda estructurado, no orientado a objetos."]}),"\n",(0,r.jsx)(n.h3,{id:"entidad-entity",children:"Entidad (Entity)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," En DDD (Domain-Driven Design), una clase que representa un concepto central del dominio, con identidad propia."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"Pet"})," es una entidad del sistema de registro de mascotas."]}),"\n",(0,r.jsx)(n.h3,{id:"servicio-service",children:"Servicio (Service)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Clase que agrupa l\xf3gica de negocio que no pertenece directamente a una sola entidad."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"CarService"})," verifica si el motor est\xe1 encendido antes de conducir el auto."]}),"\n",(0,r.jsx)(n.h3,{id:"prueba-unitaria-unit-test",children:"Prueba Unitaria (Unit Test)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," C\xf3digo que verifica el comportamiento esperado de m\xe9todos o clases individuales."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," En ",(0,r.jsx)(n.code,{children:"CarTest"}),", se prueba que ",(0,r.jsx)(n.code,{children:"start()"})," y ",(0,r.jsx)(n.code,{children:"stop()"})," cambien correctamente el estado del motor."]}),"\n",(0,r.jsx)(n.h3,{id:"abstracci\xf3n",children:"Abstracci\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Representaci\xf3n simplificada de una entidad del mundo real, resaltando lo esencial y ocultando detalles innecesarios."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," La clase ",(0,r.jsx)(n.code,{children:"Student"})," modela un estudiante, sin entrar en detalles como su direcci\xf3n f\xedsica."]}),"\n",(0,r.jsx)(n.h3,{id:"herencia",children:"Herencia"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Mecanismo por el cual una clase puede adquirir atributos y m\xe9todos de otra clase."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso (impl\xedcito):"})," Una clase ",(0,r.jsx)(n.code,{children:"Dog"})," podr\xeda heredar de ",(0,r.jsx)(n.code,{children:"Animal"})," en un sistema de mascotas."]}),"\n",(0,r.jsx)(n.h3,{id:"composici\xf3n",children:"Composici\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Relaci\xf3n entre clases donde una contiene una instancia de otra como parte de su definici\xf3n."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso (impl\xedcito):"})," La clase ",(0,r.jsx)(n.code,{children:"Owner"})," puede tener una lista de objetos ",(0,r.jsx)(n.code,{children:"Pet"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"polimorfismo",children:"Polimorfismo"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Capacidad de una misma operaci\xf3n de actuar de manera diferente seg\xfan el objeto que la invoque."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso (impl\xedcito):"})," Un m\xe9todo ",(0,r.jsx)(n.code,{children:"printInfo()"})," puede comportarse distinto en ",(0,r.jsx)(n.code,{children:"Book"})," y ",(0,r.jsx)(n.code,{children:"Magazine"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"responsabilidad-\xfanica-srp---single-responsibility-principle",children:"Responsabilidad \xdanica (SRP - Single Responsibility Principle)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Cada clase debe tener una \xfanica raz\xf3n para cambiar, es decir, una responsabilidad \xfanica."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," La clase ",(0,r.jsx)(n.code,{children:"Person"})," solo gestiona datos de personas; ",(0,r.jsx)(n.code,{children:"CarService"})," solo gestiona l\xf3gica de conducci\xf3n."]}),"\n",(0,r.jsx)(n.h3,{id:"openclosed-principle-ocp",children:"Open/Closed Principle (OCP)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Las clases deben estar abiertas a extensi\xf3n pero cerradas a modificaci\xf3n."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Podemos extender ",(0,r.jsx)(n.code,{children:"Car"})," con nuevos m\xe9todos sin cambiar su implementaci\xf3n original."]}),"\n",(0,r.jsx)(n.h2,{id:"secci\xf3n-02-introducci\xf3n-a-poo",children:"Secci\xf3n 02: Introducci\xf3n a POO"}),"\n",(0,r.jsx)(n.h3,{id:"clase-abstracta",children:"Clase Abstracta"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Clase que no se puede instanciar directamente y que sirve como base para otras clases. Puede contener m\xe9todos abstractos (sin implementaci\xf3n) que deben ser sobreescritos por las subclases."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," La clase ",(0,r.jsx)(n.code,{children:"Animal"})," es abstracta y define el m\xe9todo ",(0,r.jsx)(n.code,{children:"makeSound()"})," que ser\xe1 implementado por ",(0,r.jsx)(n.code,{children:"Dog"}),", ",(0,r.jsx)(n.code,{children:"Cat"}),", etc."]}),"\n",(0,r.jsx)(n.h3,{id:"paquete-package",children:"Paquete (Package)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Mecanismo de organizaci\xf3n del c\xf3digo fuente en Java que agrupa clases relacionadas dentro de un espacio de nombres com\xfan."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," La clase ",(0,r.jsx)(n.code,{children:"BankAccount"})," puede estar en el paquete ",(0,r.jsx)(n.code,{children:"edu.usta.domain"}),", mientras que ",(0,r.jsx)(n.code,{children:"BankAccountTest"})," en ",(0,r.jsx)(n.code,{children:"edu.usta.test"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"jerarqu\xeda-de-clases",children:"Jerarqu\xeda de Clases"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Estructura en forma de \xe1rbol donde las clases se organizan por niveles de herencia, desde clases m\xe1s generales (superclases) hasta m\xe1s espec\xedficas (subclases)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"Vehicle"})," es la superclase de ",(0,r.jsx)(n.code,{children:"Car"}),", ",(0,r.jsx)(n.code,{children:"Bike"})," y ",(0,r.jsx)(n.code,{children:"Truck"})," en un sistema de transporte."]}),"\n",(0,r.jsx)(n.h3,{id:"principio-de-sustituci\xf3n-de-liskov-liskov-substitution-principle--lsp",children:"Principio de Sustituci\xf3n de Liskov (Liskov Substitution Principle \u2013 LSP)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Principio SOLID que establece que los objetos de una subclase deben poder reemplazar a los de su superclase sin afectar el correcto funcionamiento del sistema."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Si ",(0,r.jsx)(n.code,{children:"Dog"})," y ",(0,r.jsx)(n.code,{children:"Cat"})," heredan de ",(0,r.jsx)(n.code,{children:"Animal"}),", ambos deben comportarse correctamente al ser usados donde se espera un ",(0,r.jsx)(n.code,{children:"Animal"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"principio-de-segregaci\xf3n-de-interfaces-interface-segregation-principle--isp",children:"Principio de Segregaci\xf3n de Interfaces (Interface Segregation Principle \u2013 ISP)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Principio SOLID que sugiere que es mejor tener muchas interfaces espec\xedficas que una \xfanica interfaz general que obligue a implementar m\xe9todos innecesarios."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Es preferible tener una interfaz ",(0,r.jsx)(n.code,{children:"Flyable"})," para animales que vuelan y ",(0,r.jsx)(n.code,{children:"Swimmable"})," para los que nadan, en lugar de una interfaz ",(0,r.jsx)(n.code,{children:"AnimalBehavior"})," con m\xe9todos que no todos usan."]}),"\n",(0,r.jsx)(n.h3,{id:"patr\xf3n-template-method",children:"Patr\xf3n Template Method"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Patr\xf3n de dise\xf1o en el que una clase abstracta define la estructura general de un algoritmo y permite que sus subclases implementen pasos espec\xedficos."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"Animal"})," define ",(0,r.jsx)(n.code,{children:"makeSound()"})," como m\xe9todo abstracto, y cada subclase (",(0,r.jsx)(n.code,{children:"Dog"}),", ",(0,r.jsx)(n.code,{children:"Cat"}),") proporciona su propio comportamiento."]}),"\n",(0,r.jsx)(n.h3,{id:"patr\xf3n-strategy",children:"Patr\xf3n Strategy"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Patr\xf3n de dise\xf1o que permite definir una familia de algoritmos, encapsularlos y hacerlos intercambiables sin modificar el c\xf3digo del cliente."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Si el comportamiento ",(0,r.jsx)(n.code,{children:"makeSound()"})," se delega a clases como ",(0,r.jsx)(n.code,{children:"BarkBehavior"})," o ",(0,r.jsx)(n.code,{children:"MeowBehavior"}),", el sistema puede cambiar din\xe1micamente c\xf3mo suenan los animales."]}),"\n",(0,r.jsx)(n.h2,{id:"secci\xf3n-03-pojo-y-uml-b\xe1sico",children:"Secci\xf3n 03: POJO y UML B\xe1sico"}),"\n",(0,r.jsx)(n.h3,{id:"pojo-plain-old-java-object",children:"POJO (Plain Old Java Object)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Objeto Java simple que no depende de frameworks ni librer\xedas externas. Se usa para representar datos puros del dominio."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," La clase ",(0,r.jsx)(n.code,{children:"Book"})," es un POJO que contiene t\xedtulo, autor, a\xf1o e ISBN sin l\xf3gica adicional."]}),"\n",(0,r.jsx)(n.h3,{id:"setter-y-getter",children:"Setter y Getter"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," M\xe9todos que permiten modificar (set) y acceder (get) a los atributos privados de una clase."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"getTitle()"})," devuelve el t\xedtulo del libro, y ",(0,r.jsx)(n.code,{children:'setTitle("Nuevo t\xedtulo")'})," lo actualiza."]}),"\n",(0,r.jsx)(n.h3,{id:"tostring",children:"toString()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," M\xe9todo de la clase Object en Java que retorna una representaci\xf3n en texto del objeto. Se puede sobreescribir para mostrar informaci\xf3n personalizada."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"System.out.println(book)"}),' imprimir\xe1 "Clean Code by Robert C. Martin (2008)" si ',(0,r.jsx)(n.code,{children:"toString()"})," est\xe1 sobreescrito."]}),"\n",(0,r.jsx)(n.h3,{id:"equals-y-hashcode",children:"equals() y hashCode()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," M\xe9todos utilizados para comparar objetos y almacenarlos eficientemente en colecciones como HashMap o HashSet."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Se sobreescriben para que dos libros con el mismo ISBN sean considerados iguales."]}),"\n",(0,r.jsx)(n.h3,{id:"uml-unified-modeling-language",children:"UML (Unified Modeling Language)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Lenguaje visual estandarizado para modelar sistemas orientados a objetos, incluyendo su estructura y comportamiento."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," El diagrama de clases UML muestra las clases ",(0,r.jsx)(n.code,{children:"Book"}),", ",(0,r.jsx)(n.code,{children:"User"})," y ",(0,r.jsx)(n.code,{children:"Loan"})," y sus relaciones."]}),"\n",(0,r.jsx)(n.h3,{id:"diagrama-de-clases",children:"Diagrama de Clases"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Tipo de diagrama UML que representa las clases de un sistema, sus atributos, m\xe9todos y relaciones (herencia, composici\xf3n, agregaci\xf3n)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," En el sistema de biblioteca, el diagrama de clases representa que ",(0,r.jsx)(n.code,{children:"Loan"})," tiene relaci\xf3n de agregaci\xf3n con ",(0,r.jsx)(n.code,{children:"Book"})," y ",(0,r.jsx)(n.code,{children:"User"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"agregaci\xf3n-en-uml",children:"Agregaci\xf3n (en UML)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Relaci\xf3n en la que una clase contiene referencias a otras como parte de su estructura, sin ser due\xf1a exclusiva de ellas."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"Loan o-- Book"})," indica que un pr\xe9stamo se asocia a un libro, pero el libro puede existir sin el pr\xe9stamo."]}),"\n",(0,r.jsx)(n.h3,{id:"plantuml",children:"PlantUML"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Herramienta que permite generar diagramas UML usando c\xf3digo textual."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Con PlantUML se puede escribir ",(0,r.jsx)(n.code,{children:"class Book { +getTitle(): String }"})," para generar un diagrama de clase."]}),"\n",(0,r.jsx)(n.h3,{id:"value-object-patr\xf3n-de-dise\xf1o",children:"Value Object (Patr\xf3n de Dise\xf1o)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Objeto que representa datos sin identidad propia, usado para transportar informaci\xf3n."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"Book"})," es un value object si solo interesa su contenido (t\xedtulo, autor...) y no su identidad \xfanica."]}),"\n",(0,r.jsx)(n.h3,{id:"localdate-java",children:"LocalDate (Java)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Clase de Java (",(0,r.jsx)(n.code,{children:"java.time"}),") que representa una fecha sin hora."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," El atributo date en la clase ",(0,r.jsx)(n.code,{children:"Loan"})," es de tipo ",(0,r.jsx)(n.code,{children:"LocalDate"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"secci\xf3n-bonus-unit-testing-con-junit-para-jdk-21",children:"Secci\xf3n Bonus: Unit Testing con JUnit para JDK 21+"}),"\n",(0,r.jsx)(n.h3,{id:"junit-5",children:"JUnit 5"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Framework moderno y modular para ejecutar pruebas unitarias en Java. Incluye API, plataforma de ejecuci\xf3n y soporte para versiones anteriores."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Usamos ",(0,r.jsx)(n.code,{children:"@Test"})," de JUnit 5 para verificar que el m\xe9todo ",(0,r.jsx)(n.code,{children:"add()"})," funcione correctamente."]}),"\n",(0,r.jsx)(n.h3,{id:"junit-jupiter",children:"JUnit Jupiter"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," M\xf3dulo principal de JUnit 5 que proporciona la API de pruebas moderna, anotaciones como ",(0,r.jsx)(n.code,{children:"@Test"})," y utilidades para aserciones."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"JUnit Jupiter"})," permite usar ",(0,r.jsx)(n.code,{children:"assertEquals()"})," y ",(0,r.jsx)(n.code,{children:"assertThrows()"})," para validar resultados esperados."]}),"\n",(0,r.jsx)(n.h3,{id:"junit-platform",children:"JUnit Platform"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Componente base de JUnit 5 encargado de lanzar y administrar las ejecuciones de pruebas en distintos entornos."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Herramientas como Maven o IntelliJ usan la JUnit Platform para correr pruebas desde la l\xednea de comandos o el IDE."]}),"\n",(0,r.jsx)(n.h3,{id:"junit-vintage",children:"JUnit Vintage"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," M\xf3dulo de JUnit 5 que permite ejecutar pruebas escritas con JUnit 3 y 4."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Un proyecto antiguo puede seguir usando pruebas cl\xe1sicas si se a\xf1ade JUnit Vintage."]}),"\n",(0,r.jsx)(n.h3,{id:"apache-maven",children:"Apache Maven"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Herramienta de automatizaci\xf3n y gesti\xf3n de proyectos Java, que facilita la compilaci\xf3n, testing, empaquetado y dependencia de librer\xedas."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Usamos Maven para compilar el proyecto con ",(0,r.jsx)(n.code,{children:"mvn compile"})," y ejecutar pruebas con ",(0,r.jsx)(n.code,{children:"mvn test"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"pomxml",children:"pom.xml"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Archivo de configuraci\xf3n central de un proyecto Maven. Define las dependencias, plugins y propiedades del proyecto."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," A\xf1adir la dependencia de junit-jupiter en el ",(0,r.jsx)(n.code,{children:"pom.xml"})," permite usar JUnit 5 en el proyecto."]}),"\n",(0,r.jsx)(n.h3,{id:"exec-maven-plugin",children:"exec-maven-plugin"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Plugin de Maven que permite ejecutar clases Java directamente desde la l\xednea de comandos."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Se configura este plugin en el ",(0,r.jsx)(n.code,{children:"pom.xml"})," para ejecutar ",(0,r.jsx)(n.code,{children:"App.java"})," con ",(0,r.jsx)(n.code,{children:"mvn exec:java"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"aserci\xf3n",children:"Aserci\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Expresi\xf3n l\xf3gica en un test que valida que una salida sea igual a lo esperado. Si falla, la prueba se considera incorrecta."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"assertEquals(5, calc.add(2, 3))"})," comprueba que la suma da el resultado esperado."]}),"\n",(0,r.jsx)(n.h3,{id:"beforeeach-aftereach-beforeall-afterall",children:"@BeforeEach, @AfterEach, @BeforeAll, @AfterAll"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Anotaciones de JUnit 5 que permiten ejecutar m\xe9todos auxiliares antes o despu\xe9s de una o todas las pruebas."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"@BeforeEach"})," prepara el entorno antes de cada test, como instanciar una clase."]}),"\n",(0,r.jsx)(n.h3,{id:"maven-surefire-plugin",children:"Maven Surefire Plugin"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Plugin que permite ejecutar pruebas unitarias autom\xe1ticamente al compilar el proyecto con Maven."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Las pruebas en ",(0,r.jsx)(n.code,{children:"CalculatorTest.java"})," se ejecutan con mvn test gracias a ",(0,r.jsx)(n.code,{children:"maven-surefire-plugin"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"assertthrows",children:"assertThrows()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," M\xe9todo de JUnit 5 que verifica que una excepci\xf3n espec\xedfica sea lanzada al ejecutar cierto c\xf3digo."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"assertThrows(IllegalArgumentException.class, () -> calc.divide(5, 0))"})," asegura que se lanza una excepci\xf3n al dividir por cero."]}),"\n",(0,r.jsx)(n.h2,{id:"secci\xf3n-04-constructores-getters-y-setters-tostring",children:"Secci\xf3n 04: Constructores, Getters y Setters, toString"}),"\n",(0,r.jsx)(n.h3,{id:"constructor",children:"Constructor"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," M\xe9todo especial que se ejecuta autom\xe1ticamente al crear un objeto con new. Se usa para inicializar atributos y definir el estado inicial de la instancia."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:'Student s = new Student("Ana", "S001", 4.5);'})," crea un estudiante con datos iniciales."]}),"\n",(0,r.jsx)(n.h3,{id:"constructor-impl\xedcito",children:"Constructor Impl\xedcito"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Constructor sin par\xe1metros que Java crea autom\xe1ticamente si la clase no define uno expl\xedcitamente."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Si ",(0,r.jsx)(n.code,{children:"Book"})," no define constructores, Java a\xf1ade ",(0,r.jsx)(n.code,{children:"public Book() {}"})," por defecto."]}),"\n",(0,r.jsx)(n.h3,{id:"constructor-vac\xedo",children:"Constructor Vac\xedo"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Constructor definido manualmente sin par\xe1metros, que permite crear objetos sin inicializar atributos de inmediato."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"new Product()"})," usa el constructor vac\xedo para luego usar setters."]}),"\n",(0,r.jsx)(n.h3,{id:"constructor-con-par\xe1metros",children:"Constructor con Par\xe1metros"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Constructor que recibe argumentos para inicializar directamente los atributos del objeto."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:'new Product("Mouse", "P001", 29.99, 10);'})," crea un objeto con datos definidos desde el inicio."]}),"\n",(0,r.jsx)(n.h3,{id:"sobrecarga-de-constructores-constructor-overloading",children:"Sobrecarga de Constructores (Constructor Overloading)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Definir m\xfaltiples constructores en la misma clase con diferentes listas de par\xe1metros, permitiendo formas flexibles de instanciaci\xf3n."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"Book"})," puede tener constructores con 0, 1 o 2 par\xe1metros para mayor versatilidad."]}),"\n",(0,r.jsx)(n.h3,{id:"acceso-controlado",children:"Acceso Controlado"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Principio del encapsulamiento en el que se accede a los atributos de una clase solo mediante m\xe9todos p\xfablicos (getters y setters)."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"student.setGpa(4.5)"})," aplica validaci\xf3n antes de modificar el atributo."]}),"\n",(0,r.jsx)(n.h3,{id:"formato-uniforme-en-tostring",children:"Formato uniforme en toString()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," T\xe9cnica recomendada para mostrar el estado del objeto en texto con una estructura clara y consistente."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"\"Student{name='Ana', id='S001', gpa=4.2}\""})," es un formato legible para depuraci\xf3n y registros."]}),"\n",(0,r.jsx)(n.h2,{id:"enums-string-stringbuffer-y-stringbuilder",children:"Enums, String, StringBuffer y StringBuilder"}),"\n",(0,r.jsx)(n.h3,{id:"enum-enumeraci\xf3n",children:"enum (Enumeraci\xf3n)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Tipo especial de clase que define un conjunto fijo de constantes con nombre. Ideal para representar estados, categor\xedas o roles inmutables."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"UserStatus status = UserStatus.ACTIVE"}),"; define el estado de un usuario con un valor seguro y validado."]}),"\n",(0,r.jsx)(n.h3,{id:"ordinal",children:"ordinal()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," M\xe9todo de enum que devuelve la posici\xf3n (\xedndice) de una constante dentro de la enumeraci\xf3n, comenzando desde 0."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"Priority.HIGH.ordinal()"})," devuelve 0."]}),"\n",(0,r.jsx)(n.h3,{id:"valueofstring",children:"valueOf(String)"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," M\xe9todo de enum que convierte una cadena de texto al valor correspondiente de la enumeraci\xf3n."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:'UserStatus.valueOf("SUSPENDED")'})," devuelve ",(0,r.jsx)(n.code,{children:"UserStatus.SUSPENDED"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"stringbuffer",children:"StringBuffer"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Clase mutable y sincronizada para manipulaci\xf3n eficiente de texto en entornos multihilo. Pertenece a ",(0,r.jsx)(n.code,{children:"java.lang"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:'sb.append(" nuevo texto");'})," modifica el contenido sin crear un nuevo objeto."]}),"\n",(0,r.jsx)(n.h3,{id:"stringbuilder",children:"StringBuilder"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Versi\xf3n no sincronizada de StringBuffer, m\xe1s r\xe1pida para uso en un solo hilo. Tambi\xe9n mutable."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:'new StringBuilder("Hola").append(" mundo")'})," concatena cadenas de forma eficiente."]}),"\n",(0,r.jsx)(n.h3,{id:"reverse",children:"reverse()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," M\xe9todo que invierte el contenido de un StringBuffer o StringBuilder."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:'"Java"'})," se convierte en ",(0,r.jsx)(n.code,{children:'"avaJ"'})," con ",(0,r.jsx)(n.code,{children:"reverse()"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"capacity",children:"capacity()"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," M\xe9todo que retorna la capacidad interna (en caracteres) del buffer de un StringBuilder o StringBuffer, no confundir con ",(0,r.jsx)(n.code,{children:"length()"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:"new StringBuilder().capacity()"})," devuelve 16 por defecto."]}),"\n",(0,r.jsx)(n.h3,{id:"charsequence",children:"CharSequence"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Interfaz que representa una secuencia legible de caracteres. String, StringBuffer y StringBuilder la implementan."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," M\xe9todos que aceptan ",(0,r.jsx)(n.code,{children:"CharSequence"})," pueden recibir cualquiera de esas tres clases."]}),"\n",(0,r.jsx)(n.h3,{id:"thread-safe",children:"Thread-safe"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Propiedad que indica que una clase o m\xe9todo puede ser usado de forma segura en contextos de m\xfaltiples hilos simult\xe1neamente."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," StringBuffer es thread-safe, mientras que StringBuilder no lo es."]}),"\n",(0,r.jsx)(n.h3,{id:"string-pool",children:"String Pool"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," \xc1rea especial de memoria donde Java almacena internamente literales de cadenas para optimizar uso de memoria y evitar duplicados."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:'String a = "hola"; String b = "hola";'})," \u2192 ambas referencias apuntan al mismo objeto del pool."]}),"\n",(0,r.jsx)(n.h3,{id:"comparaci\xf3n-por-contenido-equals",children:"Comparaci\xf3n por contenido (equals())"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," M\xe9todo que compara el contenido de dos objetos String."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," ",(0,r.jsx)(n.code,{children:'"Java".equals("Java")'})," \u2192 true, mientras que ",(0,r.jsx)(n.code,{children:'"Java" == "Java"'})," compara referencias, no contenido."]}),"\n",(0,r.jsx)(n.h3,{id:"benchmark",children:"Benchmark"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Definici\xf3n:"})," Prueba de rendimiento que mide el tiempo de ejecuci\xf3n de fragmentos de c\xf3digo para comparar eficiencia."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo de uso:"})," Se comparan String, StringBuffer y StringBuilder para concatenar 100,000 caracteres."]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}}}]);