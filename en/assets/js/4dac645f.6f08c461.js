"use strict";(self.webpackChunkobject_oriented_programming=self.webpackChunkobject_oriented_programming||[]).push([[4360],{3657:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Bienvenida","href":"/Object_Oriented_Programming_Intersemester/en/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Prompt educativo: Tutor asistente en programaci\xf3n y tecnolog\xeda","href":"/Object_Oriented_Programming_Intersemester/en/docs/basic_prompt","docId":"basic_prompt","unlisted":false},{"type":"category","label":"Bloque 01 - Fundamentos de la POO en Java","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Conceptos Base","href":"/Object_Oriented_Programming_Intersemester/en/docs/block-01_oop-fundamentals/basic-concepts","docId":"block-01_oop-fundamentals/basic-concepts","unlisted":false},{"type":"link","label":"Introducci\xf3n a la Programaci\xf3n Orientada a Objetos","href":"/Object_Oriented_Programming_Intersemester/en/docs/block-01_oop-fundamentals/OOP-introduction","docId":"block-01_oop-fundamentals/OOP-introduction","unlisted":false},{"type":"link","label":"POJO y UML B\xe1sico","href":"/Object_Oriented_Programming_Intersemester/en/docs/block-01_oop-fundamentals/POJO_UML_basic","docId":"block-01_oop-fundamentals/POJO_UML_basic","unlisted":false},{"type":"link","label":"Unit Testing con JUnit para JDK 21+","href":"/Object_Oriented_Programming_Intersemester/en/docs/block-01_oop-fundamentals/unit_testing_maven","docId":"block-01_oop-fundamentals/unit_testing_maven","unlisted":false},{"type":"link","label":"Constructores, Getters y Setters, toString","href":"/Object_Oriented_Programming_Intersemester/en/docs/block-01_oop-fundamentals/constructor_getters_setters_toString","docId":"block-01_oop-fundamentals/constructor_getters_setters_toString","unlisted":false},{"type":"link","label":"Enums, String, StringBuffer y StringBuilder","href":"/Object_Oriented_Programming_Intersemester/en/docs/block-01_oop-fundamentals/enums_string_stringbuffer","docId":"block-01_oop-fundamentals/enums_string_stringbuffer","unlisted":false},{"type":"link","label":"Proyecto pr\xe1ctico del bloque 1","href":"/Object_Oriented_Programming_Intersemester/en/docs/block-01_oop-fundamentals/final-project-block-01","docId":"block-01_oop-fundamentals/final-project-block-01","unlisted":false}],"href":"/Object_Oriented_Programming_Intersemester/en/docs/category/bloque-01---fundamentos-de-la-poo-en-java"},{"type":"category","label":"Bloque 02 - Interfaces, mapeo y patr\xf3n DAO","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Git y Github para estudiantes de Ingenier\xeda","href":"/Object_Oriented_Programming_Intersemester/en/docs/block-02_interfaces-maping-dao/git_and_github","docId":"block-02_interfaces-maping-dao/git_and_github","unlisted":false}],"href":"/Object_Oriented_Programming_Intersemester/en/docs/category/bloque-02---interfaces-mapeo-y-patr\xf3n-dao"}]},"docs":{"basic_prompt":{"id":"basic_prompt","title":"Prompt educativo: Tutor asistente en programaci\xf3n y tecnolog\xeda","description":"Instrucciones de uso: Copia y pega este mensaje en tu IA de preferencia (ejemplo ChatGPT) cada vez que quieras aprender un tema de forma clara, con ejemplos pr\xe1cticos y retos de aplicaci\xf3n.","sidebar":"tutorialSidebar"},"block-01_oop-fundamentals/basic-concepts":{"id":"block-01_oop-fundamentals/basic-concepts","title":"Conceptos Base","description":"La Programaci\xf3n Orientada a Objetos (POO) es un paradigma que organiza el software como una colecci\xf3n de objetos que interact\xfaan entre s\xed. Cada objeto es una instancia de una clase, que act\xfaa como plantilla para definir sus atributos (estado) y m\xe9todos (comportamiento).","sidebar":"tutorialSidebar"},"block-01_oop-fundamentals/constructor_getters_setters_toString":{"id":"block-01_oop-fundamentals/constructor_getters_setters_toString","title":"Constructores, Getters y Setters, toString","description":"\xbfQu\xe9 es el Encapsulamiento?","sidebar":"tutorialSidebar"},"block-01_oop-fundamentals/enums_string_stringbuffer":{"id":"block-01_oop-fundamentals/enums_string_stringbuffer","title":"Enums, String, StringBuffer y StringBuilder","description":"\xbfQu\xe9 es un enum?","sidebar":"tutorialSidebar"},"block-01_oop-fundamentals/final-project-block-01":{"id":"block-01_oop-fundamentals/final-project-block-01","title":"Proyecto pr\xe1ctico del bloque 1","description":"Objetivo general","sidebar":"tutorialSidebar"},"block-01_oop-fundamentals/OOP-introduction":{"id":"block-01_oop-fundamentals/OOP-introduction","title":"Introducci\xf3n a la Programaci\xf3n Orientada a Objetos","description":"La Programaci\xf3n Orientada a Objetos (POO) es un paradigma que organiza el software como una colecci\xf3n de objetos que interact\xfaan entre s\xed. Cada objeto es una instancia de una clase, que act\xfaa como plantilla para definir sus atributos (estado) y m\xe9todos (comportamiento).","sidebar":"tutorialSidebar"},"block-01_oop-fundamentals/POJO_UML_basic":{"id":"block-01_oop-fundamentals/POJO_UML_basic","title":"POJO y UML B\xe1sico","description":"\xbfQu\xe9 es un POJO?","sidebar":"tutorialSidebar"},"block-01_oop-fundamentals/unit_testing_maven":{"id":"block-01_oop-fundamentals/unit_testing_maven","title":"Unit Testing con JUnit para JDK 21+","description":"\xbfQu\xe9 es una prueba unitaria (unit test)?","sidebar":"tutorialSidebar"},"block-02_interfaces-maping-dao/git_and_github":{"id":"block-02_interfaces-maping-dao/git_and_github","title":"Git y Github para estudiantes de Ingenier\xeda","description":"Git y GitHub son herramientas indispensables en el mundo real del desarrollo de software. Te permiten:","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Bienvenida","description":"\\"El conocimiento no se guarda, se comparte.\\" Comunidad de c\xf3digo abierto","sidebar":"tutorialSidebar"}}}}')}}]);